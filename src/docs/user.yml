tags:
  - name: User
    description: Everything about User API

paths:
  /api/users:
    get:
      summary: Get all users
      tags:
        - User
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput" # Refer to a UserInput schema for creating users
      responses:
        "201":
          description: User created successfully

  /api/users/{id}:
    get:
      summary: Get a user by ID
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

    put:
      summary: Update a user
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput" # Refer to a UserInput schema for updating users
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found

    delete:
      summary: Delete a user
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: "user@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        timeZone:
          type: string
          example: "America/New_York"
        birthday:
          type: string
          format: date-time
          example: "1990-01-01T00:00:00Z"
        lastSendAt:
          type: string
          format: date-time
          example: "2024-10-26T00:00:00Z"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UserInput:
      type: object
      properties:
        email:
          type: string
          example: "newuser@example.com"
        firstName:
          type: string
          example: "Jane"
        lastName:
          type: string
          example: "Smith"
        timeZone:
          type: string
          example: "America/Chicago"
        birthday:
          type: string
          format: date-time
          example: "2000-05-15T00:00:00Z"
